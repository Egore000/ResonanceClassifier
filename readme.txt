Быстрый старт:
1) В файле Config/config.pas прописать необходимые настройки проекта.
    Указать номер начальной и конечной папки для цикла
    Указать номер начального и конечного файлов

    Если нужно, включить запись в файлы (присвоить true нужным константам)

2) Указать базовую директорию файлов с данными в параметр BASE_DIR,
    требуемое значение OMEGA_VALUE (значение Omega) и TARGET_FOLDER (Наличие светового давления)

3) Указать пути к исходным файлам
    Директория с исходными файлами должна иметь следующий вид:
    
    BASE_DIR/Исходные файлы/Без светового давления/Omega_0/1/EPH_3421.DAT
    или
    BASE_DIR/Исходные файлы/Со световым давлением/Omega_120/2/EPH_1033.DAT

4) Прописать путь к выходному файлу с классификацией

5) Прописать путь к выходному файлу с резонансными аргументами (если нужно)
    
    Для записи резонансных аргументов орбитального резонанса нужно, чтобы
    параметры ORBITAL и WRITE_ORBITAL были равны true.
    
    Для вторичных - SECONDARY и WRITE_SECONDARY_PLUS или WRITE_SECONDARY_MINUS (в зависимости
    от нужного знака)

6) Скомпилировать проект

================== Структура =================
Данный проект имеет следующую архитектуру:

Project
├───Config
├───Logs
└───MODULES
    ├───Classifier
    │   └───Utils
    ├───Resonance
    ├───Tools
    │   ├───Filetools
    │   ├───Logging
    │   ├───Math
    │   ├───ReadFond
    │   ├───Service
    │   └───System
    │       ├───Constants
    │       ├───Types
    │       └───Variables
    └───TwoBody

За что отвечает каждый файл:

* Config/config.pas - конфигурационный файл проекта, в котором прописываются
    все настройки, такие как порядок резонанса, запись в файлы, пути к файлам и тд. (подробнее в файле)

* Logs/.log - файл с логами для проверки корректности работы программы (отключается при LOGS=false в config.pas)

В папке MODULES собраны модули, используемые в проекте

* Classifier/Classifier.pas - модуль с классификатором резонансов
* Classifier/Utils/utils.pas - модуль со служебными функциями для работы классификатора

* Resonance/ResonanceUnit.pas - модуль для вычисления резонансных аргументов

Tools - директория с разными служебными модулями

* Tools/Filetools/filetools.pas - модуль для работы с файлами (запись заголовка, данных и прочего)
* Tools/Logging/logging.pas - модуль для логирования работы программы
* Tools/Math/math.pas - математические процедуры и функции
* Tools/ReadFond/readfond.pas - модуль для чтения данных из фонда 16002200.405
* Tools/Service/service.pas - модуль с различными вспомогательными функциями

* Tools/System/Constants - файл с глобальными константами
* Tools/System/Variables - файл с объявлением переменных
* Tools/System/Types - файл с объявлением типов данных

* TwoBody/TwoBody.pas - модуль для работы с функциями задачи двух тел